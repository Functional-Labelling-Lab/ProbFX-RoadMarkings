#version 430 core
layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image2D img1;
layout (binding = 1, std430) buffer OutputBlock { int[] Result; };

void main() {


  // get index in global work group i.e x,y position
  int x = int(gl_GlobalInvocationID.x);

  ivec2 size = ivec2(imageSize(img1));
  int total_size = size.x * size.y;

  ivec2 pixel_coords = ivec2(x / size.x, x % size.y);

  vec4 color1 = imageLoad(img1, pixel_coords);

  int sum = int(color1.r * 255.0) + int(color1.g * 255.0) + int(color1.b * 255.0);

  Result[x] = sum;

  memoryBarrier();
  barrier();

  for (int s=1; s < total_size; s *= 2) {
    if (x % (s * 2) == 0 && x + s < total_size) {
      Result[x] += Result[x + s];
    }

    memoryBarrier();
    barrier();
  } 

  // int root = int(sqrt(sum) * 255.0);
}
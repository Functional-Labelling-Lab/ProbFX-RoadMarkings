#version 430 core
layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba8, binding = 0) uniform image2D img1;
layout(rgba8, binding = 1) uniform image2D img2;
layout (binding = 1, std430) buffer OutputBlock { uint Result; };

void main() {

  // get index in global work group i.e x,y position
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);

  vec4 color1 = imageLoad(img1, pixel_coords);

  vec4 color2 = imageLoad(img2, pixel_coords);

  vec4 sub = color1 - color2;
  vec4 squared = pow(sub, vec4(2.0, 2.0, 2.0, 0.0));
  float sum = squared.r + squared.g + squared.b;
  uint root = int(sqrt(sum) * 255.0);

  atomicAdd(Result, root);
}
